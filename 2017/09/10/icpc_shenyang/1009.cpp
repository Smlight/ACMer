#include <bits/stdc++.h>
using namespace std;

struct Cube {
    int a[73];
    bool solved() {
        for (int i=1;i<=8;i++) {
            int p=(i-1)*9;
            for (int j=1;j<=9;j++) {
                if (a[p+j]!=a[p+1]) return false;
            }
        }
        return true;
    }
};

int group[12][9][3]={
    {{9,64,23},{41,55,18},{42,57,17},{38,58,16},{39,62,15},{37,63,14},{54,46,50},{53,48,51},{49,47,52}},
    {{46,5,27},{37,36,59},{39,35,60},{40,34,56},{44,33,57},{45,32,55},{64,68,72},{66,69,71},{65,70,67}},
    {{68,54,19},{45,14,28},{44,15,30},{43,11,31},{42,12,35},{41,10,36},{1,5,9},{3,6,8},{2,7,4}},
    {{37,18,32},{46,23,72},{48,24,71},{47,25,67},{51,26,66},{50,27,64},{55,63,59},{57,62,60},{58,61,56}},
    {{25,49,2},{26,48,6},{22,47,7},{29,58,43},{30,62,42},{31,61,38}},
    {{4,65,25},{8,66,24},{7,67,20},{43,56,13},{44,60,12},{40,61,11}},
    {{36,14,55},{5,54,64},{6,53,66},{7,49,65},{8,48,69},{9,46,68},{45,41,37},{44,42,39},{43,38,40}},
    {{1,50,72},{10,63,32},{12,62,33},{13,61,29},{17,60,30},{18,59,28},{19,23,27},{21,24,26},{20,25,22}},
    {{1,54,23},{3,53,24},{4,52,20},{8,51,21},{9,50,19},{41,63,28},{10,14,18},{12,15,17},{11,16,13}},
    {{1,27,68},{3,26,69},{2,22,70},{6,21,71},{5,19,72},{45,10,59},{36,28,32},{35,30,33},{31,29,34}},
    {{40,16,29},{39,17,33},{38,13,34},{49,20,70},{53,21,69},{52,22,65}},
    {{2,52,67},{3,51,71},{4,47,70},{11,58,34},{15,57,35},{16,56,31}}
};
int len[12]={9,9,9,9,6,6,9,9,9,9,6,6};

Cube roll(Cube x,int t)
{
    Cube y(x);
    for (int i=0;i<len[t];i++) {
        for (int j=0;j<3;j++) {
            y.a[group[t][i][j]]=x.a[group[t][i][(j+1)%3]];
        }
    }
    return y;
}

bool dfs(int dep,Cube now)
{
    if (dep>3) return false;
    if (now.solved()) return true;
    if (dep==3) return false;
    for (int i=0;i<12;i++) {
        Cube tmp=roll(now,i);
        if (dfs(dep+1,tmp)) return true;
        tmp=roll(tmp,i);
        if (dfs(dep+1,tmp)) return true;
    }
    return false;
}

int main()
{
    int T;
    scanf("%d",&T);
    while (T--) {
        Cube now;
        for (int i=1;i<=72;i++) {
            scanf("%d",&now.a[i]);
        }
        puts(dfs(0,now)?"YES":"NO");
    }
    return 0;
}
